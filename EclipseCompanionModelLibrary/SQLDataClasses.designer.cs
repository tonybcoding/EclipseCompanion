#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EclipseCompanionModelLibrary
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EclipseCompanion")]
	public partial class SQLDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProjectIndicator(ProjectIndicator instance);
    partial void UpdateProjectIndicator(ProjectIndicator instance);
    partial void DeleteProjectIndicator(ProjectIndicator instance);
    partial void InsertProjectTaskResourceLog(ProjectTaskResourceLog instance);
    partial void UpdateProjectTaskResourceLog(ProjectTaskResourceLog instance);
    partial void DeleteProjectTaskResourceLog(ProjectTaskResourceLog instance);
    partial void InsertTask(Task instance);
    partial void UpdateTask(Task instance);
    partial void DeleteTask(Task instance);
    partial void InsertConfigurationField(ConfigurationField instance);
    partial void UpdateConfigurationField(ConfigurationField instance);
    partial void DeleteConfigurationField(ConfigurationField instance);
    partial void InsertGeneralConfiguration(GeneralConfiguration instance);
    partial void UpdateGeneralConfiguration(GeneralConfiguration instance);
    partial void DeleteGeneralConfiguration(GeneralConfiguration instance);
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public SQLDataClassesDataContext() : 
				base(global::EclipseCompanionModelLibrary.Properties.Settings.Default.EclipseCompanionConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SQLDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SQLDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SQLDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SQLDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ProjectIndicator> ProjectIndicators
		{
			get
			{
				return this.GetTable<ProjectIndicator>();
			}
		}
		
		public System.Data.Linq.Table<ProjectTaskResourceLog> ProjectTaskResourceLogs
		{
			get
			{
				return this.GetTable<ProjectTaskResourceLog>();
			}
		}
		
		public System.Data.Linq.Table<Task> Tasks
		{
			get
			{
				return this.GetTable<Task>();
			}
		}
		
		public System.Data.Linq.Table<ConfigurationField> ConfigurationFields
		{
			get
			{
				return this.GetTable<ConfigurationField>();
			}
		}
		
		public System.Data.Linq.Table<GeneralConfiguration> GeneralConfigurations
		{
			get
			{
				return this.GetTable<GeneralConfiguration>();
			}
		}
		
		public System.Data.Linq.Table<Project> Projects
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectIndicators")]
	public partial class ProjectIndicator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _ProjectEclipseId;
		
		private string _Name;
		
		private int _StateId;
		
		private string _StateName;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastUpdated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnProjectEclipseIdChanging(int value);
    partial void OnProjectEclipseIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStateIdChanging(int value);
    partial void OnStateIdChanged();
    partial void OnStateNameChanging(string value);
    partial void OnStateNameChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdatedChanging(System.DateTime value);
    partial void OnLastUpdatedChanged();
    #endregion
		
		public ProjectIndicator()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectEclipseId", DbType="Int NOT NULL")]
		public int ProjectEclipseId
		{
			get
			{
				return this._ProjectEclipseId;
			}
			set
			{
				if ((this._ProjectEclipseId != value))
				{
					this.OnProjectEclipseIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectEclipseId = value;
					this.SendPropertyChanged("ProjectEclipseId");
					this.OnProjectEclipseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int NOT NULL")]
		public int StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this.OnStateIdChanging(value);
					this.SendPropertyChanging();
					this._StateId = value;
					this.SendPropertyChanged("StateId");
					this.OnStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this.OnStateNameChanging(value);
					this.SendPropertyChanging();
					this._StateName = value;
					this.SendPropertyChanged("StateName");
					this.OnStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="DateTime2 NOT NULL")]
		public System.DateTime LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this.OnLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastUpdated = value;
					this.SendPropertyChanged("LastUpdated");
					this.OnLastUpdatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectTaskResourceLog")]
	public partial class ProjectTaskResourceLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _ProjId;
		
		private int _TaskId;
		
		private int _UserId;
		
		private System.DateTime _StartDateTime;
		
		private System.DateTime _EndDateTime;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastUpdated;
		
		private EntityRef<Task> _Task;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnProjIdChanging(int value);
    partial void OnProjIdChanged();
    partial void OnTaskIdChanging(int value);
    partial void OnTaskIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnStartDateTimeChanging(System.DateTime value);
    partial void OnStartDateTimeChanged();
    partial void OnEndDateTimeChanging(System.DateTime value);
    partial void OnEndDateTimeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdatedChanging(System.DateTime value);
    partial void OnLastUpdatedChanged();
    #endregion
		
		public ProjectTaskResourceLog()
		{
			this._Task = default(EntityRef<Task>);
			this._Project = default(EntityRef<Project>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjId", DbType="Int NOT NULL")]
		public int ProjId
		{
			get
			{
				return this._ProjId;
			}
			set
			{
				if ((this._ProjId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjIdChanging(value);
					this.SendPropertyChanging();
					this._ProjId = value;
					this.SendPropertyChanged("ProjId");
					this.OnProjIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskId", DbType="Int NOT NULL")]
		public int TaskId
		{
			get
			{
				return this._TaskId;
			}
			set
			{
				if ((this._TaskId != value))
				{
					if (this._Task.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaskIdChanging(value);
					this.SendPropertyChanging();
					this._TaskId = value;
					this.SendPropertyChanged("TaskId");
					this.OnTaskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateTime", DbType="DateTime2 NOT NULL")]
		public System.DateTime StartDateTime
		{
			get
			{
				return this._StartDateTime;
			}
			set
			{
				if ((this._StartDateTime != value))
				{
					this.OnStartDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartDateTime = value;
					this.SendPropertyChanged("StartDateTime");
					this.OnStartDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateTime", DbType="DateTime2 NOT NULL")]
		public System.DateTime EndDateTime
		{
			get
			{
				return this._EndDateTime;
			}
			set
			{
				if ((this._EndDateTime != value))
				{
					this.OnEndDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EndDateTime = value;
					this.SendPropertyChanged("EndDateTime");
					this.OnEndDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="DateTime2 NOT NULL")]
		public System.DateTime LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this.OnLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastUpdated = value;
					this.SendPropertyChanged("LastUpdated");
					this.OnLastUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Task_ProjectTaskResourceLog", Storage="_Task", ThisKey="TaskId", OtherKey="id", IsForeignKey=true)]
		public Task Task
		{
			get
			{
				return this._Task.Entity;
			}
			set
			{
				Task previousValue = this._Task.Entity;
				if (((previousValue != value) 
							|| (this._Task.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Task.Entity = null;
						previousValue.ProjectTaskResourceLogs.Remove(this);
					}
					this._Task.Entity = value;
					if ((value != null))
					{
						value.ProjectTaskResourceLogs.Add(this);
						this._TaskId = value.id;
					}
					else
					{
						this._TaskId = default(int);
					}
					this.SendPropertyChanged("Task");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectTaskResourceLog", Storage="_Project", ThisKey="ProjId", OtherKey="id", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.ProjectTaskResourceLogs.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.ProjectTaskResourceLogs.Add(this);
						this._ProjId = value.id;
					}
					else
					{
						this._ProjId = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ProjectTaskResourceLog", Storage="_User", ThisKey="UserId", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ProjectTaskResourceLogs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ProjectTaskResourceLogs.Add(this);
						this._UserId = value.id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tasks")]
	public partial class Task : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _TaskName;
		
		private int _UserCreatedId;
		
		private bool _IsActive;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastUpdated;
		
		private EntitySet<ProjectTaskResourceLog> _ProjectTaskResourceLogs;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnTaskNameChanging(string value);
    partial void OnTaskNameChanged();
    partial void OnUserCreatedIdChanging(int value);
    partial void OnUserCreatedIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdatedChanging(System.DateTime value);
    partial void OnLastUpdatedChanged();
    #endregion
		
		public Task()
		{
			this._ProjectTaskResourceLogs = new EntitySet<ProjectTaskResourceLog>(new Action<ProjectTaskResourceLog>(this.attach_ProjectTaskResourceLogs), new Action<ProjectTaskResourceLog>(this.detach_ProjectTaskResourceLogs));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string TaskName
		{
			get
			{
				return this._TaskName;
			}
			set
			{
				if ((this._TaskName != value))
				{
					this.OnTaskNameChanging(value);
					this.SendPropertyChanging();
					this._TaskName = value;
					this.SendPropertyChanged("TaskName");
					this.OnTaskNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedId", DbType="Int NOT NULL")]
		public int UserCreatedId
		{
			get
			{
				return this._UserCreatedId;
			}
			set
			{
				if ((this._UserCreatedId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedId = value;
					this.SendPropertyChanged("UserCreatedId");
					this.OnUserCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="DateTime2 NOT NULL")]
		public System.DateTime LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this.OnLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastUpdated = value;
					this.SendPropertyChanged("LastUpdated");
					this.OnLastUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Task_ProjectTaskResourceLog", Storage="_ProjectTaskResourceLogs", ThisKey="id", OtherKey="TaskId")]
		public EntitySet<ProjectTaskResourceLog> ProjectTaskResourceLogs
		{
			get
			{
				return this._ProjectTaskResourceLogs;
			}
			set
			{
				this._ProjectTaskResourceLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Task", Storage="_User", ThisKey="UserCreatedId", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Tasks.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Tasks.Add(this);
						this._UserCreatedId = value.id;
					}
					else
					{
						this._UserCreatedId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProjectTaskResourceLogs(ProjectTaskResourceLog entity)
		{
			this.SendPropertyChanging();
			entity.Task = this;
		}
		
		private void detach_ProjectTaskResourceLogs(ProjectTaskResourceLog entity)
		{
			this.SendPropertyChanging();
			entity.Task = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConfigurationFields")]
	public partial class ConfigurationField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _fieldname;
		
		private string _fieldtype;
		
		private string _displayname;
		
		private int _displaycolumn;
		
		private int _displaycolumnwidth;
		
		private bool _todisplay;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnfieldnameChanging(string value);
    partial void OnfieldnameChanged();
    partial void OnfieldtypeChanging(string value);
    partial void OnfieldtypeChanged();
    partial void OndisplaynameChanging(string value);
    partial void OndisplaynameChanged();
    partial void OndisplaycolumnChanging(int value);
    partial void OndisplaycolumnChanged();
    partial void OndisplaycolumnwidthChanging(int value);
    partial void OndisplaycolumnwidthChanged();
    partial void OntodisplayChanging(bool value);
    partial void OntodisplayChanged();
    #endregion
		
		public ConfigurationField()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fieldname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string fieldname
		{
			get
			{
				return this._fieldname;
			}
			set
			{
				if ((this._fieldname != value))
				{
					this.OnfieldnameChanging(value);
					this.SendPropertyChanging();
					this._fieldname = value;
					this.SendPropertyChanged("fieldname");
					this.OnfieldnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fieldtype", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string fieldtype
		{
			get
			{
				return this._fieldtype;
			}
			set
			{
				if ((this._fieldtype != value))
				{
					this.OnfieldtypeChanging(value);
					this.SendPropertyChanging();
					this._fieldtype = value;
					this.SendPropertyChanged("fieldtype");
					this.OnfieldtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_displayname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string displayname
		{
			get
			{
				return this._displayname;
			}
			set
			{
				if ((this._displayname != value))
				{
					this.OndisplaynameChanging(value);
					this.SendPropertyChanging();
					this._displayname = value;
					this.SendPropertyChanged("displayname");
					this.OndisplaynameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_displaycolumn", DbType="Int NOT NULL")]
		public int displaycolumn
		{
			get
			{
				return this._displaycolumn;
			}
			set
			{
				if ((this._displaycolumn != value))
				{
					this.OndisplaycolumnChanging(value);
					this.SendPropertyChanging();
					this._displaycolumn = value;
					this.SendPropertyChanged("displaycolumn");
					this.OndisplaycolumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_displaycolumnwidth", DbType="Int NOT NULL")]
		public int displaycolumnwidth
		{
			get
			{
				return this._displaycolumnwidth;
			}
			set
			{
				if ((this._displaycolumnwidth != value))
				{
					this.OndisplaycolumnwidthChanging(value);
					this.SendPropertyChanging();
					this._displaycolumnwidth = value;
					this.SendPropertyChanged("displaycolumnwidth");
					this.OndisplaycolumnwidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_todisplay", DbType="Bit NOT NULL")]
		public bool todisplay
		{
			get
			{
				return this._todisplay;
			}
			set
			{
				if ((this._todisplay != value))
				{
					this.OntodisplayChanging(value);
					this.SendPropertyChanging();
					this._todisplay = value;
					this.SendPropertyChanged("todisplay");
					this.OntodisplayChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeneralConfiguration")]
	public partial class GeneralConfiguration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _LastAPIRefresh;
		
		private int _LastUpdatedByUserId;
		
		private bool _UpdatingAPI;
		
		private string _TruncateString;
		
		private string _EclipseGreen;
		
		private string _EclipseYellow;
		
		private string _EclipseRed;
		
		private string _ComplexityGreen;
		
		private string _ComplexityYellow;
		
		private string _ComplexityRed;
		
		private string _ScheduleGreen;
		
		private string _ScheduleYellow;
		
		private string _ScheduleRed;
		
		private string _OverallGreen;
		
		private string _OverallYellow;
		
		private string _OverallRed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnLastAPIRefreshChanging(System.DateTime value);
    partial void OnLastAPIRefreshChanged();
    partial void OnLastUpdatedByUserIdChanging(int value);
    partial void OnLastUpdatedByUserIdChanged();
    partial void OnUpdatingAPIChanging(bool value);
    partial void OnUpdatingAPIChanged();
    partial void OnTruncateStringChanging(string value);
    partial void OnTruncateStringChanged();
    partial void OnEclipseGreenChanging(string value);
    partial void OnEclipseGreenChanged();
    partial void OnEclipseYellowChanging(string value);
    partial void OnEclipseYellowChanged();
    partial void OnEclipseRedChanging(string value);
    partial void OnEclipseRedChanged();
    partial void OnComplexityGreenChanging(string value);
    partial void OnComplexityGreenChanged();
    partial void OnComplexityYellowChanging(string value);
    partial void OnComplexityYellowChanged();
    partial void OnComplexityRedChanging(string value);
    partial void OnComplexityRedChanged();
    partial void OnScheduleGreenChanging(string value);
    partial void OnScheduleGreenChanged();
    partial void OnScheduleYellowChanging(string value);
    partial void OnScheduleYellowChanged();
    partial void OnScheduleRedChanging(string value);
    partial void OnScheduleRedChanged();
    partial void OnOverallGreenChanging(string value);
    partial void OnOverallGreenChanged();
    partial void OnOverallYellowChanging(string value);
    partial void OnOverallYellowChanged();
    partial void OnOverallRedChanging(string value);
    partial void OnOverallRedChanged();
    #endregion
		
		public GeneralConfiguration()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAPIRefresh", DbType="DateTime2 NOT NULL")]
		public System.DateTime LastAPIRefresh
		{
			get
			{
				return this._LastAPIRefresh;
			}
			set
			{
				if ((this._LastAPIRefresh != value))
				{
					this.OnLastAPIRefreshChanging(value);
					this.SendPropertyChanging();
					this._LastAPIRefresh = value;
					this.SendPropertyChanged("LastAPIRefresh");
					this.OnLastAPIRefreshChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedByUserId", DbType="Int NOT NULL")]
		public int LastUpdatedByUserId
		{
			get
			{
				return this._LastUpdatedByUserId;
			}
			set
			{
				if ((this._LastUpdatedByUserId != value))
				{
					this.OnLastUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedByUserId = value;
					this.SendPropertyChanged("LastUpdatedByUserId");
					this.OnLastUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatingAPI", DbType="Bit NOT NULL")]
		public bool UpdatingAPI
		{
			get
			{
				return this._UpdatingAPI;
			}
			set
			{
				if ((this._UpdatingAPI != value))
				{
					this.OnUpdatingAPIChanging(value);
					this.SendPropertyChanging();
					this._UpdatingAPI = value;
					this.SendPropertyChanged("UpdatingAPI");
					this.OnUpdatingAPIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TruncateString", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TruncateString
		{
			get
			{
				return this._TruncateString;
			}
			set
			{
				if ((this._TruncateString != value))
				{
					this.OnTruncateStringChanging(value);
					this.SendPropertyChanging();
					this._TruncateString = value;
					this.SendPropertyChanged("TruncateString");
					this.OnTruncateStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EclipseGreen", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EclipseGreen
		{
			get
			{
				return this._EclipseGreen;
			}
			set
			{
				if ((this._EclipseGreen != value))
				{
					this.OnEclipseGreenChanging(value);
					this.SendPropertyChanging();
					this._EclipseGreen = value;
					this.SendPropertyChanged("EclipseGreen");
					this.OnEclipseGreenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EclipseYellow", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EclipseYellow
		{
			get
			{
				return this._EclipseYellow;
			}
			set
			{
				if ((this._EclipseYellow != value))
				{
					this.OnEclipseYellowChanging(value);
					this.SendPropertyChanging();
					this._EclipseYellow = value;
					this.SendPropertyChanged("EclipseYellow");
					this.OnEclipseYellowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EclipseRed", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EclipseRed
		{
			get
			{
				return this._EclipseRed;
			}
			set
			{
				if ((this._EclipseRed != value))
				{
					this.OnEclipseRedChanging(value);
					this.SendPropertyChanging();
					this._EclipseRed = value;
					this.SendPropertyChanged("EclipseRed");
					this.OnEclipseRedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplexityGreen", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ComplexityGreen
		{
			get
			{
				return this._ComplexityGreen;
			}
			set
			{
				if ((this._ComplexityGreen != value))
				{
					this.OnComplexityGreenChanging(value);
					this.SendPropertyChanging();
					this._ComplexityGreen = value;
					this.SendPropertyChanged("ComplexityGreen");
					this.OnComplexityGreenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplexityYellow", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ComplexityYellow
		{
			get
			{
				return this._ComplexityYellow;
			}
			set
			{
				if ((this._ComplexityYellow != value))
				{
					this.OnComplexityYellowChanging(value);
					this.SendPropertyChanging();
					this._ComplexityYellow = value;
					this.SendPropertyChanged("ComplexityYellow");
					this.OnComplexityYellowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplexityRed", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ComplexityRed
		{
			get
			{
				return this._ComplexityRed;
			}
			set
			{
				if ((this._ComplexityRed != value))
				{
					this.OnComplexityRedChanging(value);
					this.SendPropertyChanging();
					this._ComplexityRed = value;
					this.SendPropertyChanged("ComplexityRed");
					this.OnComplexityRedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleGreen", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ScheduleGreen
		{
			get
			{
				return this._ScheduleGreen;
			}
			set
			{
				if ((this._ScheduleGreen != value))
				{
					this.OnScheduleGreenChanging(value);
					this.SendPropertyChanging();
					this._ScheduleGreen = value;
					this.SendPropertyChanged("ScheduleGreen");
					this.OnScheduleGreenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleYellow", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ScheduleYellow
		{
			get
			{
				return this._ScheduleYellow;
			}
			set
			{
				if ((this._ScheduleYellow != value))
				{
					this.OnScheduleYellowChanging(value);
					this.SendPropertyChanging();
					this._ScheduleYellow = value;
					this.SendPropertyChanged("ScheduleYellow");
					this.OnScheduleYellowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleRed", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ScheduleRed
		{
			get
			{
				return this._ScheduleRed;
			}
			set
			{
				if ((this._ScheduleRed != value))
				{
					this.OnScheduleRedChanging(value);
					this.SendPropertyChanging();
					this._ScheduleRed = value;
					this.SendPropertyChanged("ScheduleRed");
					this.OnScheduleRedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverallGreen", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OverallGreen
		{
			get
			{
				return this._OverallGreen;
			}
			set
			{
				if ((this._OverallGreen != value))
				{
					this.OnOverallGreenChanging(value);
					this.SendPropertyChanging();
					this._OverallGreen = value;
					this.SendPropertyChanged("OverallGreen");
					this.OnOverallGreenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverallYellow", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OverallYellow
		{
			get
			{
				return this._OverallYellow;
			}
			set
			{
				if ((this._OverallYellow != value))
				{
					this.OnOverallYellowChanging(value);
					this.SendPropertyChanging();
					this._OverallYellow = value;
					this.SendPropertyChanged("OverallYellow");
					this.OnOverallYellowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverallRed", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OverallRed
		{
			get
			{
				return this._OverallRed;
			}
			set
			{
				if ((this._OverallRed != value))
				{
					this.OnOverallRedChanging(value);
					this.SendPropertyChanging();
					this._OverallRed = value;
					this.SendPropertyChanged("OverallRed");
					this.OnOverallRedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Projects")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _EclipseId;
		
		private string _Name;
		
		private string _Description;
		
		private string _ProjectOwner;
		
		private string _Priority;
		
		private string _Status;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private decimal _PercentComplete;
		
		private System.DateTime _DateCreated;
		
		private System.DateTime _DateLastModified;
		
		private string _ShortStatusNotes;
		
		private string _FullStatusNotes;
		
		private string _StatusCategory;
		
		private int _StatusSortOder;
		
		private System.DateTime _LastStatusDate;
		
		private int _PrioritySortOrder;
		
		private int _StatusCategoryId;
		
		private int _StatusId;
		
		private int _PriorityId;
		
		private int _ProjectOwnerId;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastUpdated;
		
		private EntitySet<ProjectTaskResourceLog> _ProjectTaskResourceLogs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnEclipseIdChanging(int value);
    partial void OnEclipseIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnProjectOwnerChanging(string value);
    partial void OnProjectOwnerChanged();
    partial void OnPriorityChanging(string value);
    partial void OnPriorityChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnPercentCompleteChanging(decimal value);
    partial void OnPercentCompleteChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateLastModifiedChanging(System.DateTime value);
    partial void OnDateLastModifiedChanged();
    partial void OnShortStatusNotesChanging(string value);
    partial void OnShortStatusNotesChanged();
    partial void OnFullStatusNotesChanging(string value);
    partial void OnFullStatusNotesChanged();
    partial void OnStatusCategoryChanging(string value);
    partial void OnStatusCategoryChanged();
    partial void OnStatusSortOderChanging(int value);
    partial void OnStatusSortOderChanged();
    partial void OnLastStatusDateChanging(System.DateTime value);
    partial void OnLastStatusDateChanged();
    partial void OnPrioritySortOrderChanging(int value);
    partial void OnPrioritySortOrderChanged();
    partial void OnStatusCategoryIdChanging(int value);
    partial void OnStatusCategoryIdChanged();
    partial void OnStatusIdChanging(int value);
    partial void OnStatusIdChanged();
    partial void OnPriorityIdChanging(int value);
    partial void OnPriorityIdChanged();
    partial void OnProjectOwnerIdChanging(int value);
    partial void OnProjectOwnerIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdatedChanging(System.DateTime value);
    partial void OnLastUpdatedChanged();
    #endregion
		
		public Project()
		{
			this._ProjectTaskResourceLogs = new EntitySet<ProjectTaskResourceLog>(new Action<ProjectTaskResourceLog>(this.attach_ProjectTaskResourceLogs), new Action<ProjectTaskResourceLog>(this.detach_ProjectTaskResourceLogs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EclipseId", DbType="Int NOT NULL")]
		public int EclipseId
		{
			get
			{
				return this._EclipseId;
			}
			set
			{
				if ((this._EclipseId != value))
				{
					this.OnEclipseIdChanging(value);
					this.SendPropertyChanging();
					this._EclipseId = value;
					this.SendPropertyChanged("EclipseId");
					this.OnEclipseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(2048) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectOwner", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ProjectOwner
		{
			get
			{
				return this._ProjectOwner;
			}
			set
			{
				if ((this._ProjectOwner != value))
				{
					this.OnProjectOwnerChanging(value);
					this.SendPropertyChanging();
					this._ProjectOwner = value;
					this.SendPropertyChanged("ProjectOwner");
					this.OnProjectOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentComplete", DbType="Decimal(5,4) NOT NULL")]
		public decimal PercentComplete
		{
			get
			{
				return this._PercentComplete;
			}
			set
			{
				if ((this._PercentComplete != value))
				{
					this.OnPercentCompleteChanging(value);
					this.SendPropertyChanging();
					this._PercentComplete = value;
					this.SendPropertyChanged("PercentComplete");
					this.OnPercentCompleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime2 NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastModified", DbType="DateTime2 NOT NULL")]
		public System.DateTime DateLastModified
		{
			get
			{
				return this._DateLastModified;
			}
			set
			{
				if ((this._DateLastModified != value))
				{
					this.OnDateLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateLastModified = value;
					this.SendPropertyChanged("DateLastModified");
					this.OnDateLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortStatusNotes", DbType="VarChar(4000) NOT NULL", CanBeNull=false)]
		public string ShortStatusNotes
		{
			get
			{
				return this._ShortStatusNotes;
			}
			set
			{
				if ((this._ShortStatusNotes != value))
				{
					this.OnShortStatusNotesChanging(value);
					this.SendPropertyChanging();
					this._ShortStatusNotes = value;
					this.SendPropertyChanged("ShortStatusNotes");
					this.OnShortStatusNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullStatusNotes", DbType="VarChar(4000) NOT NULL", CanBeNull=false)]
		public string FullStatusNotes
		{
			get
			{
				return this._FullStatusNotes;
			}
			set
			{
				if ((this._FullStatusNotes != value))
				{
					this.OnFullStatusNotesChanging(value);
					this.SendPropertyChanging();
					this._FullStatusNotes = value;
					this.SendPropertyChanged("FullStatusNotes");
					this.OnFullStatusNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusCategory", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusCategory
		{
			get
			{
				return this._StatusCategory;
			}
			set
			{
				if ((this._StatusCategory != value))
				{
					this.OnStatusCategoryChanging(value);
					this.SendPropertyChanging();
					this._StatusCategory = value;
					this.SendPropertyChanged("StatusCategory");
					this.OnStatusCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusSortOder", DbType="Int NOT NULL")]
		public int StatusSortOder
		{
			get
			{
				return this._StatusSortOder;
			}
			set
			{
				if ((this._StatusSortOder != value))
				{
					this.OnStatusSortOderChanging(value);
					this.SendPropertyChanging();
					this._StatusSortOder = value;
					this.SendPropertyChanged("StatusSortOder");
					this.OnStatusSortOderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastStatusDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime LastStatusDate
		{
			get
			{
				return this._LastStatusDate;
			}
			set
			{
				if ((this._LastStatusDate != value))
				{
					this.OnLastStatusDateChanging(value);
					this.SendPropertyChanging();
					this._LastStatusDate = value;
					this.SendPropertyChanged("LastStatusDate");
					this.OnLastStatusDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrioritySortOrder", DbType="Int NOT NULL")]
		public int PrioritySortOrder
		{
			get
			{
				return this._PrioritySortOrder;
			}
			set
			{
				if ((this._PrioritySortOrder != value))
				{
					this.OnPrioritySortOrderChanging(value);
					this.SendPropertyChanging();
					this._PrioritySortOrder = value;
					this.SendPropertyChanged("PrioritySortOrder");
					this.OnPrioritySortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusCategoryId", DbType="Int NOT NULL")]
		public int StatusCategoryId
		{
			get
			{
				return this._StatusCategoryId;
			}
			set
			{
				if ((this._StatusCategoryId != value))
				{
					this.OnStatusCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._StatusCategoryId = value;
					this.SendPropertyChanged("StatusCategoryId");
					this.OnStatusCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int NOT NULL")]
		public int StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriorityId", DbType="Int NOT NULL")]
		public int PriorityId
		{
			get
			{
				return this._PriorityId;
			}
			set
			{
				if ((this._PriorityId != value))
				{
					this.OnPriorityIdChanging(value);
					this.SendPropertyChanging();
					this._PriorityId = value;
					this.SendPropertyChanged("PriorityId");
					this.OnPriorityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectOwnerId", DbType="Int NOT NULL")]
		public int ProjectOwnerId
		{
			get
			{
				return this._ProjectOwnerId;
			}
			set
			{
				if ((this._ProjectOwnerId != value))
				{
					this.OnProjectOwnerIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectOwnerId = value;
					this.SendPropertyChanged("ProjectOwnerId");
					this.OnProjectOwnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="DateTime2 NOT NULL")]
		public System.DateTime LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this.OnLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastUpdated = value;
					this.SendPropertyChanged("LastUpdated");
					this.OnLastUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectTaskResourceLog", Storage="_ProjectTaskResourceLogs", ThisKey="id", OtherKey="ProjId")]
		public EntitySet<ProjectTaskResourceLog> ProjectTaskResourceLogs
		{
			get
			{
				return this._ProjectTaskResourceLogs;
			}
			set
			{
				this._ProjectTaskResourceLogs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProjectTaskResourceLogs(ProjectTaskResourceLog entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_ProjectTaskResourceLogs(ProjectTaskResourceLog entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _LoginId;
		
		private string _EmailAddress;
		
		private string _Password;
		
		private int _AccessLevel;
		
		private System.Nullable<System.DateTime> _LastLogIn;
		
		private bool _Active;
		
		private bool _Locked;
		
		private bool _ForcePasswordChange;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastUpdated;
		
		private EntitySet<ProjectTaskResourceLog> _ProjectTaskResourceLogs;
		
		private EntitySet<Task> _Tasks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnLoginIdChanging(string value);
    partial void OnLoginIdChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnAccessLevelChanging(int value);
    partial void OnAccessLevelChanged();
    partial void OnLastLogInChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLogInChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnLockedChanging(bool value);
    partial void OnLockedChanged();
    partial void OnForcePasswordChangeChanging(bool value);
    partial void OnForcePasswordChangeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdatedChanging(System.DateTime value);
    partial void OnLastUpdatedChanged();
    #endregion
		
		public User()
		{
			this._ProjectTaskResourceLogs = new EntitySet<ProjectTaskResourceLog>(new Action<ProjectTaskResourceLog>(this.attach_ProjectTaskResourceLogs), new Action<ProjectTaskResourceLog>(this.detach_ProjectTaskResourceLogs));
			this._Tasks = new EntitySet<Task>(new Action<Task>(this.attach_Tasks), new Action<Task>(this.detach_Tasks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginId", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string LoginId
		{
			get
			{
				return this._LoginId;
			}
			set
			{
				if ((this._LoginId != value))
				{
					this.OnLoginIdChanging(value);
					this.SendPropertyChanging();
					this._LoginId = value;
					this.SendPropertyChanged("LoginId");
					this.OnLoginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessLevel", DbType="Int NOT NULL")]
		public int AccessLevel
		{
			get
			{
				return this._AccessLevel;
			}
			set
			{
				if ((this._AccessLevel != value))
				{
					this.OnAccessLevelChanging(value);
					this.SendPropertyChanging();
					this._AccessLevel = value;
					this.SendPropertyChanged("AccessLevel");
					this.OnAccessLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogIn", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LastLogIn
		{
			get
			{
				return this._LastLogIn;
			}
			set
			{
				if ((this._LastLogIn != value))
				{
					this.OnLastLogInChanging(value);
					this.SendPropertyChanging();
					this._LastLogIn = value;
					this.SendPropertyChanged("LastLogIn");
					this.OnLastLogInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locked", DbType="Bit NOT NULL")]
		public bool Locked
		{
			get
			{
				return this._Locked;
			}
			set
			{
				if ((this._Locked != value))
				{
					this.OnLockedChanging(value);
					this.SendPropertyChanging();
					this._Locked = value;
					this.SendPropertyChanged("Locked");
					this.OnLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForcePasswordChange", DbType="Bit NOT NULL")]
		public bool ForcePasswordChange
		{
			get
			{
				return this._ForcePasswordChange;
			}
			set
			{
				if ((this._ForcePasswordChange != value))
				{
					this.OnForcePasswordChangeChanging(value);
					this.SendPropertyChanging();
					this._ForcePasswordChange = value;
					this.SendPropertyChanged("ForcePasswordChange");
					this.OnForcePasswordChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="DateTime2 NOT NULL")]
		public System.DateTime LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this.OnLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastUpdated = value;
					this.SendPropertyChanged("LastUpdated");
					this.OnLastUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ProjectTaskResourceLog", Storage="_ProjectTaskResourceLogs", ThisKey="id", OtherKey="UserId")]
		public EntitySet<ProjectTaskResourceLog> ProjectTaskResourceLogs
		{
			get
			{
				return this._ProjectTaskResourceLogs;
			}
			set
			{
				this._ProjectTaskResourceLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Task", Storage="_Tasks", ThisKey="id", OtherKey="UserCreatedId")]
		public EntitySet<Task> Tasks
		{
			get
			{
				return this._Tasks;
			}
			set
			{
				this._Tasks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProjectTaskResourceLogs(ProjectTaskResourceLog entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ProjectTaskResourceLogs(ProjectTaskResourceLog entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Tasks(Task entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Tasks(Task entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
}
#pragma warning restore 1591
